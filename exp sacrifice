// This Mechanic is extremely similar to the Soulfork from Impaled, making it so that when your item is used it detects whether the user has an experience level, then runs the code. else, it damages the user.

@Override
    public ActionResult use(World world, PlayerEntity user, Hand hand) {
        ItemStack stack = user.getMainHandStack();
        if (world instanceof ServerWorld serverWorld) {
            if (user.experienceLevel > 0) {
                user.addExperienceLevels(-1);
         // code go here
            } else {
                // code go here
                user.damage(serverWorld, DamageSources.generic(user), 4f); //idr how to use a default damage source, so I recommend using a custom one!
            }
            return super.use(world, user, hand);
        }
        return null;
    }

Let's break this down!
ItemStack stack = user.getMainHandStack(); gets and assigns a variable to the item being used.

if (world instanceof ServerWorld serverWorld) detects if the world is a server.

if (user.experienceLevel > 0) {
user.addExperienceLevels(-1);

This checks if the user has an experience level, than subtracts one level. From there, you can run any functions or uses you want!

}else{
user.damage(serverWorld, DamageSources.generic(user), 4f); 
This checks that if the user has no experience levels to give, it deals damage to the user!
