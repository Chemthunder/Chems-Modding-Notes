Fun stuff to poke fun at ArcCM (Or Katto or whatever the fuck)


Item registry classes DO NOT have to be called ModNameItems. You can name literally any of your classes whatever the hell you want, conflicting classes literally
only happens if you are using the same src package names:

example:
src/main/org/examplemod/registries/ExampleModItems

src/main/org/examplemod/registries/ExampleModItems

IF YOU DID THIS AT ALL YOU WOULDN'T BE USING THE SAME MOD.
NOBODY WOULD NAME THEIR SRC PACKAGES 
"src/main/dev/chemthunder/examplemod" AND HAVE EXAMPLEMOD IMPLEMENTED AS WELL. 

Be aware this will likely never happen, because everyone uses a different name for their packages. Saying you SHOULD do this is stupid
because you will likely never need to. It's always safe to take precautions but this is a wee excessive.

Yes you can name your item registries anything across any version, it does not fucking matter.

Also, don't use Text.literal for tooltips, nor make having enters harder than they should be. Yes this is good if you want different colors but it really
doesn't matter when some libraries do this for you.

Use \n, it's much better.

Also Arc, I saw what you put in ArcSenal_1.19.2, fix your sorry excuse for pulling entities toward you.
Use entity.getRotationVec, it saves so much time, and it works across versions.

Remove the stolen assets from Eternite as well while you're at it, art thief.


Again, don't use text.literal. reference things-i-probably-should-know-:sob: in this repo for Text.translatable.


WE for BCSMP use Fabric 0.16.10 because it is the most compatible with Quilt 1.19.2, not because it offers support.

Don't use Carpet for all of your mod's testing, as you cannot experience what the ghost player is seeing.
iirc Carpet players also do not load chunks, though i may be wrong.

Sharing via LAN is fine, but do note its risks.

For testing in multiplayer just export the mod as a jar file and test with a friend?
It guarentees a second opinion and it gives more openness to finding bugs and incompatibility issues.


I'll offer some of my details too!

For custom Item classes (as in custom functionality), use a different directory in your main package named Item instead of just dropping it in your Index directory.
Learn file management.

Hey also, you don't need to fucking explain how to add a library. Most libraries have instructions on their own wikis.

Also also, it's not "new Item()" if you're using interfaces for registries instead of classes.
Offer both sides of a coin, or be clear that you're using a class.
